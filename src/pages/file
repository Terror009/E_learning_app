/* onSnapshot(q, (querySnapShot) => {
            querySnapShot.forEach((userDoc) => {
              if (!userDoc.exists) {
                console.log("false");
              } else {
                if (userDoc.data().Status === true && userDoc.data().userRole) {
                  Redirected("url", "/dashboard");
                  Status("status", true);

                  redirected.getItem("url");
                  status.getItem("status");
                 
                } else if (
                  userDoc.data().Status === false &&
                  userDoc.data().userRole === "Student"
                ) {
                  Redirected("url", "/userrole_ver/student");
                  UserType("type", userDoc.data().userRole);
                  Status("status", false);
                  status.getItem("status");
                  redirected.getItem("url");
                  usertype.getItem("type");
                } else if (
                  userDoc.data().Status === false &&
                  userDoc.data().userRole === "Teacher"
                ) {
                  Redirected("url", "/userrole_ver/teacher");
                  UserType("type", userDoc.data().userRole);
                  Status("status", false);
                  status.getItem("status");
                  redirected.getItem("url");
                  usertype.getItem("type");
                } else {
                  Redirected("url", "/userrole_ver");
                  UserType("type", userDoc.data().userRole);
                  Status("status", false);

                  status.getItem("status");
                  redirected.getItem("url");
                  usertype.getItem("type");
                }
              }
            });
          }); */

          /*    try {
            const indexof = user.email.indexOf("@");
            const db = getFirestore();
            const userRef = collection(db, "Users");
            const q = query(userRef);
            
            onSnapshot(q, (querySnapShot) => {
              querySnapShot.forEach((doc) => {
                if (!doc.exists) {
                  const usersDoc = doc(db, "users", user.uid);
                  setDoc(usersDoc, {
                    email: user.email,
                    username: user.displayName.substring(0, indexof),
                    userUId: user.uid,
                  });
                } else {
                  console.log("okay");
                }
              });
            });
          } catch (err) {
            console.log(err);
          } */

          const indexof = user.email.indexOf("@");
          const userDoc = doc(db, "Users", user.user.uid);
          setDoc(
            userDoc,
            {
              Email: user.user.email,
              Username: user.user.displayName,
              userUid: user.user.uid,
              Status: false,
              Steps: "0",
            },
            { merge: true }
          );

          <Box
          sx={{
            position: "relative",
            backgroundColor: (theme) => theme.palette.secondary.bg9,
            padding: {
              lg: "20px 20px",
              md: "20px 20px",
              sm: "20px 20px",
              xs: "20px 10px",
            },
          }}
        >
          <Typography
            variant="h5"
            sx={{
              fontFamily: (theme) => theme.palette.typography.fontFamily,
              fontWeight: "normal",
              color: (theme) => theme.palette.textColor.col1,
      
            }}
          >
            Settings
          </Typography>
          <Paper
            sx={{
              padding: "10px",
              borderRadius: "10px",
              width: {
                lg: "500px",
                md: "400px",
                sm: "400px",
                xs: "90%",
              },
              mb: "20px",
            }}
          >
            <Box sx={{ display: "flex", alignItems: "center", mb: "20px" }}>
              <UserEditIcon
                style={{
                  height: "25px",
                  width: "25px",
                  color: "#26399C",
                  marginRight: "10px",
                }}
              />
              <Typography
                variant="body1"
                sx={{
                  fontFamily: (theme) => theme.palette.typography.fontFamily,
                  fontWeight: "normal",
                  color: (theme) => theme.palette.textColor.col1,
                }}
              >
                Profile
              </Typography>
            </Box>
            <Button
              onClick={handleChangeDialogPicOpen}
              fullWidth
              sx={{
                display: "flex",
                padding: "10px",
              }}
              endIcon={
                <ArrowRightIcon
                  id="icon"
                  style={{ height: "15px", width: "15px", color: "#26399C" }}
                />
              }
            >
              <Box
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "flex-start",
                  width: "100%",
                }}
              >
                <Typography
                  variant="body2"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "bold",
                    color: (theme) => theme.palette.textColor.col1,
                    textTransform: "capitalize",
                  }}
                >
                  Avatar
                </Typography>
                <Typography
                  variant="caption"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "normal",
                    color: (theme) => theme.palette.textColor.col1,
                    textTransform: "capitalize",
                  }}
                >
                  Avatar_1
                </Typography>
              </Box>
            </Button>
            <Button
              fullWidth
              sx={{
                display: "flex",
                padding: "10px",
              }}
              endIcon={
                <ArrowRightIcon
                  id="icon"
                  style={{ height: "15px", width: "15px", color: "#26399C" }}
                />
              }
            >
              <Box
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "flex-start",
                  width: "100%",
                }}
              >
                <Typography
                  variant="body2"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "bold",
                    color: (theme) => theme.palette.textColor.col1,
                    textTransform: "capitalize",
                  }}
                >
                  Username
                </Typography>
                <Typography
                  variant="caption"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "normal",
                    color: (theme) => theme.palette.textColor.col1,
                    textTransform: "capitalize",
                  }}
                >
                  {payload.username}
                </Typography>
              </Box>
            </Button>
            {payload.Fname === "" ||
            payload.Lname === "" ||
            payload.Age === "" ||
            payload.Phonenum === "" ||
            payload.day === "" ||
            payload.month === "" ||
            payload.year === "" ? (
              <Box
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  justifyContent: "center",
                  alignItems: "center",
                  height: "100px",
                  width: "100%",
                }}
              >
                <Typography
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "bold",
                    color: (theme) => theme.palette.textColor.col1,
                    textTransform: "capitalize",
                    mb: "20px",
                  }}
                >
                  Complete your information
                </Typography>
                <Link
                  component={NLink}
                  to="/userrole_ver"
                  sx={{ textDecoration: "none" }}
                >
                  <Button
                    sx={{
                      height: "40px",
                      width: "100px",
                      backgroundColor: (theme) => theme.palette.secondary.main,
                      boxShadow: "0px 6px 0px #26399C",
                      borderRadius: "10px",
                      transition: "0.3s ease",
                      "&:hover": {
                        boxShadow: "none",
                        backgroundColor: (theme) => theme.palette.secondary.bg7,
                        transform: "translateY(10%)",
                      },
                    }}
                  >
                    <Typography
                      sx={{
                        fontFamily: (theme) =>
                          theme.palette.typography.fontFamily,
                        fontWeight: "normal",
                        color: (theme) => theme.palette.textColor.col2,
                        textTransform: "capitalize",
                      }}
                    >
                      Click here
                    </Typography>
                  </Button>
                </Link>
              </Box>
            ) : (
              ""
            )}
          </Paper>
          <Paper
            sx={{
              padding: "10px",
              borderRadius: "10px",
              width: {
                lg: "500px",
                md: "400px",
                sm: "400px",
                xs: "90%",
              },
              mb: "20px",
            }}
          >
            <Box sx={{ display: "flex", alignItems: "center", mb: "20px" }}>
              <UserCircleIcon
                style={{
                  height: "30px",
                  width: "30px",
                  color: "#26399C",
                  marginRight: "10px",
                }}
              />
              <Typography
                variant="body1"
                sx={{
                  fontFamily: (theme) => theme.palette.typography.fontFamily,
                  fontWeight: "normal",
                  color: (theme) => theme.palette.textColor.col1,
                }}
              >
                Account Settings
              </Typography>
            </Box>
            <Button
              fullWidth
              sx={{
                display: "flex",
                padding: "10px",
              }}
              endIcon={
                <ArrowRightIcon
                  id="icon"
                  style={{ height: "15px", width: "15px", color: "#26399C" }}
                />
              }
            >
              <Box
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "flex-start",
                  width: "100%",
                }}
              >
                <Typography
                  variant="body1"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "bold",
                    color: (theme) => theme.palette.textColor.col7,
                    textTransform: "capitalize",
                  }}
                >
                  Update Password
                </Typography>
              </Box>
            </Button>
            <Button
              fullWidth
              sx={{
                display: "flex",
                padding: "10px",
              }}
              endIcon={
                <ArrowRightIcon
                  id="icon"
                  style={{ height: "15px", width: "15px", color: "#26399C" }}
                />
              }
            >
              <Box
                sx={{
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "flex-start",
                  width: "100%",
                }}
              >
                <Typography
                  variant="body1"
                  sx={{
                    fontFamily: (theme) => theme.palette.typography.fontFamily,
                    fontWeight: "bold",
                    color: (theme) => theme.palette.textColor.col7,
                    textTransform: "capitalize",
                  }}
                >
                  Log out
                </Typography>
              </Box>
            </Button>
          </Paper>
          <Box
            sx={{
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              height: "30px",
              width: "400px",
            }}
          >
            <Link component={NLink} sx={{ textDecoration: "none" }}>
              <Typography
                variant="caption"
                sx={{
                  fontFamily: (theme) => theme.palette.typography.fontFamily,
                  fontWeight: "normal",
                  color: (theme) => theme.palette.textColor.col7,
                  mr: "5px",
                }}
              >
                Terms of Service
              </Typography>
            </Link>
            <Divider
              orientation="vertical"
              sx={{
                height: "10px",
                backgroundColor: (theme) => theme.palette.secondary.main,
                mr: "5px",
              }}
            />
            <Link component={NLink} sx={{ textDecoration: "none" }}>
              <Typography
                variant="caption"
                sx={{
                  fontFamily: (theme) => theme.palette.typography.fontFamily,
                  fontWeight: "normal",
                  color: (theme) => theme.palette.textColor.col7,
                }}
              >
                Privacy Policy
              </Typography>
            </Link>
          </Box>
          <ProfilePicDialog
            Open={dialog.isOpen}
            onClose={handleChangeDialogPicClose}
          />
        </Box>